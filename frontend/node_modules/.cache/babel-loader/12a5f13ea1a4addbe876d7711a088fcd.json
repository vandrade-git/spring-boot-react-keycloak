{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useKeycloak } from '@react-keycloak/web';\nexport const useAxios = baseURL => {\n  const [keycloak, initialized] = useKeycloak();\n  const [axiosInstance, setAxiosInstance] = useState({});\n  useEffect(() => {\n    const instance = axios.create({\n      baseURL,\n      headers: {\n        Authorization: initialized ? `Bearer ${keycloak.token}` : undefined\n      }\n    });\n    setAxiosInstance({\n      instance\n    });\n    return () => {\n      setAxiosInstance({});\n    };\n  }, [baseURL, initialized, keycloak, keycloak.token]);\n  return axiosInstance.instance;\n};","map":{"version":3,"sources":["/home/vandrade/Documents/Projects/Personal/keycloak-experiment/frontend/src/utils/hooks.js"],"names":["useState","useEffect","axios","useKeycloak","useAxios","baseURL","keycloak","initialized","axiosInstance","setAxiosInstance","instance","create","headers","Authorization","token","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAD,IAAa;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,WAAW,EAA3C;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC5BN,MAAAA,OAD4B;AAE5BO,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEN,WAAW,GAAI,UAASD,QAAQ,CAACQ,KAAM,EAA5B,GAAgCC;AADnD;AAFmB,KAAb,CAAjB;AAOAN,IAAAA,gBAAgB,CAAC;AAAEC,MAAAA;AAAF,KAAD,CAAhB;AAEA,WAAO,MAAM;AACXD,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACD,KAFD;AAGD,GAbQ,EAaN,CAACJ,OAAD,EAAUE,WAAV,EAAuBD,QAAvB,EAAiCA,QAAQ,CAACQ,KAA1C,CAbM,CAAT;AAeA,SAAON,aAAa,CAACE,QAArB;AACD,CApBM","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { useKeycloak } from '@react-keycloak/web'\n\nexport const useAxios = (baseURL) => {\n  const [keycloak, initialized] = useKeycloak()\n  const [axiosInstance, setAxiosInstance] = useState({})\n\n  useEffect(() => {\n    const instance = axios.create({\n      baseURL,\n      headers: {\n        Authorization: initialized ? `Bearer ${keycloak.token}` : undefined,\n      },\n    })\n\n    setAxiosInstance({ instance })\n\n    return () => {\n      setAxiosInstance({})\n    }\n  }, [baseURL, initialized, keycloak, keycloak.token])\n\n  return axiosInstance.instance\n}\n"]},"metadata":{},"sourceType":"module"}